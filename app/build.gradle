apply plugin: 'com.android.application'

android {
    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileSdkVersion 21
    buildToolsVersion "21.1.1"
    defaultConfig {
        applicationId "com.labs.dm.auto_tethering"
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 5
        versionName "0.0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

/*    productFlavors {
        full {
            applicationId "com.buildsystemexample.app.full"
            versionName "1.0-full"
        }
    }*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    //compile -->
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //testCompile -->
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    //androidTestCompile -->
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'com.android.support.test:rules:0.4'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
}

def Properties props = new Properties()
def propFile = new File('gradle.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
            props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['RELEASE_STORE_FILE'])
        android.signingConfigs.release.storePassword = props['RELEASE_STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['RELEASE_KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['RELEASE_KEY_PASSWORD']
    } else {
        println 'gradle.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'gradle.properties not found'
    android.buildTypes.release.signingConfig = null
}
